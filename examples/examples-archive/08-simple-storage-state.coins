// Simple Storage vs State Example
// Shows the key difference between immutable storage and mutable state

coin SimpleStorageState {
    // Storage: immutable values that define the puzzle
    storage {
        // This admin address is part of the puzzle hash
        address ADMIN = "xch1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqm6ks6e8mvy";
    }
    
    // State: mutable values stored in coin hints/memo
    state {
        // Counter that can be incremented
        uint256 counter = 0;
    }
    
    // Default spend - anyone can increment the counter
    action spend(bytes32 conditions) {
        // State update would happen here
        // counter = counter + 1;
        
        emit CounterIncremented(counter + 1);
        
        conditions;
    }
    
    // Admin-only reset
    action reset(bytes32 conditions) {
        require(msg.sender == ADMIN, "Only admin can reset");
        
        // State update would happen here
        // counter = 0;
        
        emit CounterReset();
        
        conditions;
    }
    
    event CounterIncremented(uint256 newValue);
    event CounterReset();
} 